---
- hosts: "k8s-nodes"
  vars_files:
  - "../config/config.yml"
  tasks:
  - name: "mkdir /var/lib/kubelet"
    file:
      path: "/var/lib/kubelet"
      state: directory
  - name: "copy files to nodes"
    copy:
      src: "{{item.src}}"
      dest: "{{item.dest}}"
      mode: 0755
    with_items:
    - src: "../sbin/kubelet"
      dest: "/usr/bin/"
    - src: "../sbin/kube-proxy"
      dest: "/usr/bin/"
    - src: "../sbin/kubectl"
      dest: "/usr/bin/"
    - src: "template/k8s/kubelet.service"
      dest: "/lib/systemd/system/"
    - src: "template/k8s/kube-proxy.service"
      dest: "/lib/systemd/system/"
    - src: "template/calico/check-calico.sh"
      dest: "/opt/"
  - name: "template files to nodes"
    template:
      src: "{{item.src}}"
      dest: "{{item.dest}}"
    with_items:
    - src: "template/k8s/config"
      dest: "/etc/kubernetes/"
    - src: "template/k8s/kubelet"
      dest: "/etc/kubernetes/"
    - src: "template/k8s/proxy"
      dest: "/etc/kubernetes/"
  - block:
    - shell: "swapoff -a"
    - shell: "kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server=https://{{k8s.apiserver}}:6443 --kubeconfig=/etc/kubernetes/kubeconfig"
    - shell: "kubectl config set-credentials admin --client-certificate=/etc/kubernetes/ssl/admin.pem --client-key=/etc/kubernetes/ssl/admin-key.pem --embed-certs=true --kubeconfig=/etc/kubernetes/kubeconfig"
    - shell: "kubectl config set-context kubernetes --cluster=kubernetes --user=admin --kubeconfig=/etc/kubernetes/kubeconfig"
    - shell: "kubectl config use-context kubernetes --kubeconfig=/etc/kubernetes/kubeconfig"
  - name: "check-calico"
    shell: "/opt/check-calico.sh"
    when: k8s.network == "calico"
  - name: "wait for calico-node ready"
    wait_for:
      path: /var/run/calico-node.pid
    when: k8s.network == "calico"
  - block:
    - shell: systemctl daemon-reload
    - service: 
        name: kubelet
        enabled: yes
    - service: 
        name: kubelet
        state: restarted
    - shell: systemctl status kubelet
      register: result
    - debug:
        msg: "{{result.stdout}}"
  - block:
    - shell: systemctl daemon-reload
    - service: 
        name: kube-proxy
        enabled: yes
    - service: 
        name: kube-proxy
        state: restarted
    - shell: systemctl status kube-proxy
      register: result
    - debug:
        msg: "{{result.stdout}}"
  